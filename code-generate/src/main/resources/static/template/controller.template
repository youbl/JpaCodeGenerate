package {{package_name}}.controller;

import {{package_name}}.service.{{entity_name}}Service;
import {{package_name}}.dto.{{entity_name}}Dto;
import {{package_name}}.ResponseData;
import {{package_name}}.mapstruct.{{entity_name}}EntityMapper;
import org.springframework.web.bind.annotation.*;
import lombok.RequiredArgsConstructor;
import lombok.NonNull;

import java.util.List;

/**
 *
 * @author youbl.blog.csdn.net
 * @since {{date_time}}
 */
@RestController
@RequiredArgsConstructor
//@RequestMapping("{{entity_name}}")
public class {{entity_name}}Controller {
    private final {{entity_name}}Service service;

    @GetMapping("/{{low_entity_name}}/all")
    public ResponseData<List<{{entity_name}}Dto>> findAll({{entity_name}}Dto dto) {
        return ResponseData.ok(service.search(dto));
    }

    @GetMapping("/{{low_entity_name}}")
    public ResponseData<{{entity_name}}Dto> findById(@NonNull @RequestParam Long {{low_key_field}}) {
        return ResponseData.ok({{entity_name}}EntityMapper.INSTANCE.entity2dto(service.getById({{low_key_field}})));
    }

{{start-modify_content}}
    @DeleteMapping("/{{low_entity_name}}")
    // @EventLog(subType = SubType.{{entity_name}}_DEL)
    public ResponseData<Boolean> delById(@NonNull @RequestParam Long {{low_key_field}}) {
        return ResponseData.ok(service.removeById({{low_key_field}}));
    }

    @PostMapping("/{{low_entity_name}}")
    // 要区分新增还是更新，因此这里不能用注解@EventLog
    public ResponseData<Long> save(@NonNull @RequestBody {{entity_name}}Dto dto) {
        // 获取事件上报的类型
        //SubType type = (dto.get{{up_key_field}}() != null) ? SubType.{{entity_name}}_EDIT : SubType.{{entity_name}}_ADD;

        long newId = service.save{{entity_name}}(dto);

        dto.set{{up_key_field}}(newId);
        //LogUtils.reportLog(type, dto); // 事件上报代码

        return ResponseData.ok(newId);
    }
{{end-modify_content}}
}