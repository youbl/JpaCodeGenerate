server:
  port: 8999
  servlet:
    context-path: /sql

spring:
  application:
    name: "code-generate"         # 程序name，建议配置，方便统一的服务管理
  profiles:
    active: dev

  # mysql连接信息配置
  datasource:
    url: jdbc:mysql://127.0.0.1:8306/ops?allowMultiQueries=true&useUnicode=true&characterEncoding=utf8&socketTimeout=2000&connectTimeout=2000&rewriteBatchedStatements=true&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver

  jackson:
    default-property-inclusion: always  #为空也序列化
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    mapper:
      accept_case_insensitive_properties: true

  ldap:
    urls: ldap://beinet.cn:389
    base: OU=OrgUnit,DC=beinet,DC=cn
    email-domain: "beinet.cn"  # 登录ldap时，如果配置了此域名，会在用户名后添加@域名

login:
  needLogin: 1       # 1表示要登录，0表示不需要登录即可使用系统
  keepSecond: 2592000  # 登录token有效时长, 超过要重新登录，单位秒，这里配置为30天
  emailDomain: "beinet.cn"

logging:
  level:
    cn.beinet.codegenerate.configs.LdapLoginFilter: debug

getip-url: https://tools01.ziniao.com/get_ip

default-saas: ml

ip-filter:
  white-ip: # 客户端IP，以这些IP为前缀时，才允许访问
    - "127."    # 必须用双引号括起来，否则配置会识别为数字，变成127.0，而下面的 192.168.则没问题
    - "10."
    - 192.168.
    - 0:0:0:0:0:0:0:1
    - 8.217.76.130
  exclude-url: # 这些url前缀，不进行IP过滤
    - /test
    - /test2

# api调用使用的认证 ak/sk
sdk:
  app-key: sdk
  secure-key: 123456

third-login-info:
  # 未登录时，要跳转到哪里去登录
  login-url: https://login.dingtalk.com/oauth2/auth?response_type=code&client_id=${third-login-info.app-key}&scope=openid
  # 登录成功时，跳回到哪个地址？通常是本服务的域名+接收token的地址
  callback-url: /authCallback
  # 跟随url传递到登录方，再通过回调传递回来的参数，业务方自用
  callback-para: xxxxxxxxx
  app-key: aaa
  app-secret: bbb


cloud:
  # 用于阿里云cdn操作的ak/sk
  ali-cdn:
    ak: 11
    sk: 22
    exe-path: D:\\aaa\\aliyun.exe

backup:
  enable: false
  # gitlab表示备份文件 存储到哪里
  gitlab:
    url: https://git.beinet.cn/backups.git
    username: beiliang_you
    password: 123456
    rootDir: /work/source/backups
  # 要备份的nacos服务列表，备份每个nacos所有命名空间的配置
  nacos:
    enable: false
    backDir: /work/source/backups/nacos
    sites:
      - url: http://test.beinet.cn/nacos/
        username: readonly
        password: 123456
      - url: http://prod.beinet.cn/nacos/
        username: readonly
        password: 123456
  # 要备份的mysql服务列表，备份每个mysql的表结构和数据增长情况
  mysql:
    enable: false
    backDir: /data/app/backups/mysql
    instances:
      - ip: 10.2.5.2
        port: 3306
        username: readonly
        password: 123456
        back-data-tables: # 这个清单里的表，要备份数据，不在清单里的表只备份表结构,格式为 库名.表名
          - ops.admin_menu_group
      - ip: 10.2.5.3
        port: 3306
        username: readonly
        password: 123456
  # 要备份的jenkins服务列表，备份每个job的xml配置
  jenkins:
    enable: false
    backDir: /data/app/backups/jenkins
    sites:
      - url: http://10.100.72.165:8080/
        username: beinet
        password: 123456
  # 要备份的目录或文件列表
  files:
    enable: false
    backDir: /data/app/backups/backFiles # 备份到哪里
    paths:
      - /etc/nginx                 # 要备份的目录或文件
      - /etc/supervisord.conf
      - /etc/supervisord.d
  # 要备份的redis实例列表，目前备份info命令结果
  redis:
    enable: false
    back-dir: /data/app/backups/redis
    instances:
      - ip: 10.100.72.165
        password: 123456

data-clean:
  enabled: false
  # 配置说明:
  # 存入数据库，参考ops.sql里定义的 clean_config表和clean_tables表
  # 1、根据配置的时间字段、保留天数，查找到要处理的记录主键最大值
  # SELECT MAX(key-field) maxId FROM [table-name] FORCE INDEX(force-index-name) WHERE [time-field]< 【now() - keep-days】
  # 注：如果设置了partition-num,且大于1，则会多个分区同时进行，SQL的表名变成 FROM [table-name] PARTITION(p分区序号)
  # 2、根据主键maxId进行数据备份
  # INSERT INTO [back-to-db].[table-name]_bak[YearMonth] SELECT 字段列表 FROM [table-name] WHERE [key-field]<=maxId AND [other-condition]
  # 3、根据主键maxId，进行数据删除，每次只删除10000行，直到返回0行为止
  # DELETE FROM [table-name] WHERE [key-field]<=maxId AND [other-condition] LIMIT 10000
